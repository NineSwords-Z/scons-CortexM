import os
# import sys
import compiler
from icecream import ic

# project root path
PRO_ROOT = os.path.normpath(os.getcwd())
# ic(PRO_ROOT)

TARGET = compiler.BUILD_ROOT + '/' + compiler.BOARD + '.elf'
ic(TARGET)

env = Environment(tools=['mingw'],
                  AS=compiler.AS, ASFLAGS=compiler.AFLAGS,
                  CC=compiler.CC, CFLAGS=compiler.CFLAGS,
                  AR=compiler.AR, ARFLAGS='-rc',
                  CXX=compiler.CXX, CXXFLAGS=compiler.CXXFLAGS,
                  LINK=compiler.LINK, LINKFLAGS=compiler.LFLAGS)

# ic(env['CCCOM'])

env.PrependENVPath('PATH', os.getenv('PATH'))

objs = SConscript('SConscript', exports='env', variant_dir=compiler.BUILD_ROOT, duplicate=0)
objs.extend(SConscript('Core\SConscript', exports='env', variant_dir=compiler.BUILD_ROOT + '\Core', duplicate=0))
objs.extend(SConscript('Drivers\SConscript', exports='env', variant_dir=compiler.BUILD_ROOT + '\Drivers', duplicate=0))

ic(env['CPPPATH'])

# print(env.Dump())
# ic(objs)

env.Program(TARGET, objs)
env.AddPostAction(TARGET, compiler.POST_ACTION_PRE)
env.AddPostAction(TARGET, compiler.POST_ACTION_HEX)
env.AddPostAction(TARGET, compiler.POST_ACTION_BIN)
