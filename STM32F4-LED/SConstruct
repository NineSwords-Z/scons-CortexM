import os
# import sys
import compiler
from icecream import ic

# print("Shell is", os.environ['SHELL'])

# project root path
PRO_ROOT = os.path.normpath(os.getcwd())

TARGET = compiler.BUILD_ROOT + '/' + compiler.BOARD + '.' + compiler.TARGET_EXT
ic(TARGET)

env = Environment(tools=['mingw'],
                  AS=compiler.AS, ASFLAGS=compiler.AFLAGS,
                  CC=compiler.CC, CFLAGS=compiler.CFLAGS,
                  AR=compiler.AR, ARFLAGS='-rc',
                  CXX=compiler.CXX, CXXFLAGS=compiler.CXXFLAGS,
                  LINK=compiler.LINK, LINKFLAGS=compiler.LFLAGS)

ic(env['CCCOM'])
ic(env['TOOLS'])
# print(env.Dump())

env.PrependENVPath('PATH', os.getenv('PATH'))

objs = SConscript('SConscript', variant_dir=compiler.BUILD_ROOT + '/objs', duplicate=0)
# objs.extend(SConscript('Core/SConscript', variant_dir=compiler.BUILD_ROOT + '/objs', duplicate=0))
# objs.extend(SConscript('Drivers/SConscript', variant_dir=compiler.BUILD_ROOT + '/objs', duplicate=0))

#ic(objs)
env.Program(TARGET, objs)

# # make a building
# env.Program(TARGET, source='bar.c')
# DoBuilding(TARGET, objs)
